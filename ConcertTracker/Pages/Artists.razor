@page "/artists"

@using Microsoft.EntityFrameworkCore
@using BusinessLayer.Interfaces
@using DataLayer.Entities
@using DataLayer
@using BusinessLayer

@inject NavigationManager Navigation
@inject IDbContextFactory<ApplicationDbContext> ContextFactory
@inject IArtistRepository ArtistRep

<h4>Insert New Artist</h4>
<EditForm Model="@newArtist" OnValidSubmit="@InsertArtist">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="firstName" @bind-Value="newArtist.Name" />
    <InputText id="lastName" @bind-Value="newArtist.Pass" />
    <InputText id="emailAddress" @bind-Value="newArtist.MailAddress" />

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h3>Artists</h3>

@if (artists is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Pass</th>
                <th>Email Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in artists)
            {
                <tr>
                    <td>@artist.Name</td>
                    <td>@artist.Pass</td>
                    <td>@artist.MailAddress</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DataManager DataManager;

    private List<Artist> artists;
    Artist newArtist = new Artist();
    protected override async Task OnInitializedAsync()
    {
        artists = await ArtistRep.GetAllArtists();
    }
    private async Task InsertArtist()
    {

        Artist p = new Artist
        {
            Name = newArtist.Name,
            Pass = newArtist.Pass,
            MailAddress = newArtist.MailAddress
        };

        await ArtistRep.AddArtist(p);

        artists.Add(p);

        newArtist = new Artist();
    }
}
