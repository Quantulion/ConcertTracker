@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider


<ul class="navBar">
    <li class="leftPage">
        <a>
            <NavLink class="nav-link" href="about">
                About
            </NavLink>
        </a>
    </li>
    <li class="commonPage">
        <a>
            <NavLink class="nav-link" href="search">
                Search
            </NavLink>
        </a>
    </li>
    <li class="commonPage">
        <a>
            <NavLink class="nav-link" href="map">
                Map
            </NavLink>
        </a>
    </li>
    <li class="rightPage">
        <a>
            @{
                if (isLoggedIn == true)
                {
                    <NavLink class="nav-link" href="/Identity/Account/Manage">
                        Profile
                    </NavLink>
                }
                else
                {
                    <NavLink class="nav-link" href="/Identity/Account/Login">
                        Profile
                    </NavLink>
                }
            }
        </a>
    </li>
</ul>

@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
            isLoggedIn = true;
    }
}